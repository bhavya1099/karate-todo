# ********RoostGPT********

# Test generated by RoostGPT for test java-junit4-test using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet/{petId}/uploadImage_post for http method type POST 
# RoostTestHash=8dac89cb33
# 
# 

# ********RoostGPT********
Feature: Pet Image Upload

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', 'defaultToken')
  * configure headers = { Authorization: '#(authToken)' }

Scenario: Upload an image for a pet
  Given path 'v2', 'pet', 1, 'uploadImage'
  And multipart field 'additionalMetadata' = 'test metadata'
  And multipart file 'file' = { read: 'test-image.jpg', filename: 'test-image.jpg', contentType: 'image/jpeg' }
  When method post
  Then status 200
  And match response == { code: '#number', type: '#string', message: '#string' }

Scenario Outline: Upload an image for a pet with different petId and metadata
  Given path 'v2', 'pet', '<petId>', 'uploadImage'
  And multipart field 'additionalMetadata' = '<metadata>'
  And multipart file 'file' = { read: 'test-image.jpg', filename: 'test-image.jpg', contentType: 'image/jpeg' }
  When method post
  Then status 200
  And match response == { code: '#number', type: '#string', message: '#string' }

  Examples:
    | petId | metadata       |
    | 2     | 'test meta 1'  |
    | 3     | 'test meta 2'  |
    | 4     | 'test meta 3'  |
