# ********RoostGPT********

# Test generated by RoostGPT for test java-junit4-test using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /user_post for http method type POST 
# RoostTestHash=d815599fc6
# 
# 

# ********RoostGPT********
Feature: User API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', 'testAuthToken')
  * def headers = { Authorization: '#(authToken)' }

Scenario: Create a user
  Given path '/v2/user'
  And request { "id": 1, "username": "testUser", "firstName": "Test", "lastName": "User", "email": "testUser@example.com", "password": "testPassword", "phone": "1234567890", "userStatus": 1 }
  When method post
  Then status 200
  And match response == { "description": "successful operation" }

Scenario Outline: Verify user creation with different inputs
  Given path '/v2/user'
  And request { "id": '<id>', "username": '<username>', "firstName": '<firstName>', "lastName": '<lastName>', "email": '<email>', "password": '<password>', "phone": '<phone>', "userStatus": '<userStatus>' }
  When method post
  Then status 200
  And match response == { "description": "successful operation" }

  Examples:
    | id | username | firstName | lastName | email           | password   | phone      | userStatus |
    | 2  | user2    | First2    | Last2    | user2@test.com  | password2  | 2345678901 | 2          |
    | 3  | user3    | First3    | Last3    | user3@test.com  | password3  | 3456789012 | 3          |
    | 4  | user4    | First4    | Last4    | user4@test.com  | password4  | 4567890123 | 4          |
    | 5  | user5    | First5    | Last5    | user5@test.com  | password5  | 5678901234 | 5          |
