# ********RoostGPT********

# Test generated by RoostGPT for test java-junit4-test using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet_put for http method type PUT 
# RoostTestHash=ec103be570
# 
# 

# ********RoostGPT********
Feature: Pet Store API Tests

Background: 
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', '{{ $processEnvironment.AUTH_TOKEN }}')
  * def authHeader = { Authorization: '#(' + authToken + ')' }
  * configure headers = authHeader

Scenario: Update an existing pet
  Given path '/v2/pet'
  And request { 
    "id": '#(id)',
    "category": { 
      "id": '#(categoryId)',
      "name": '#(categoryName)'
    },
    "name": '#(name)',
    "photoUrls": '#(photoUrls)',
    "tags": '#(tags)',
    "status": '#(status)'
  }
  When method put
  Then status 200
  And match response == { 
    "id": '#(id)',
    "category": { 
      "id": '#(categoryId)',
      "name": '#(categoryName)'
    },
    "name": '#(name)',
    "photoUrls": '#(photoUrls)',
    "tags": '#(tags)',
    "status": '#(status)'
  }

Examples:
  | id | categoryId | categoryName | name    | photoUrls             | tags       | status  |
  | 1  | 1          | 'Dogs'       | 'Rex'   | ['url1', 'url2']      | ['tag1']   | 'sold'  |
  | 2  | 2          | 'Cats'       | 'Misty' | ['url3', 'url4']      | ['tag2']   | 'sold'  |
  | 3  | 3          | 'Birds'      | 'Tweety'| ['url5', 'url6']      | ['tag3']   | 'sold'  |
