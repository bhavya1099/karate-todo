# ********RoostGPT********

# Test generated by RoostGPT for test java-junit4-test using AI Type Open AI and AI Model gpt-4
# 
# Feature file generated for /pet_put for http method type PUT 
# RoostTestHash=ec103be570
# 
# 

# ********RoostGPT********
Feature: Pet Store API Tests

Background: 
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['auth.token'] || karate.get('authToken', '{{ $processEnvironment.AUTH_TOKEN }}')
  * configure headers = {Authorization: '#(authToken)'}

Scenario: Update an existing pet
  Given path '/v2/pet'
  And request {id: '#(petId)', name: '#(petName)', photoUrls: '#(photoUrls)', tags: '#(tags)', status: '#(status)'}
  When method put
  Then status 200
  And match response == {id: '#(petId)', name: '#(petName)', photoUrls: '#(photoUrls)', tags: '#(tags)', status: '#(status)'}

Examples:
  | petId | petName | photoUrls                       | tags                | status |
  | 1     | 'Tommy' | ['url1', 'url2']                | ['tag1', 'tag2']   | 'sold' |
  | 2     | 'Max'   | ['url3', 'url4']                | ['tag3', 'tag4']   | 'sold' |
  | 3     | 'Bella' | ['url5', 'url6']                | ['tag5', 'tag6']   | 'sold' |

Scenario: Attempt to update a pet with invalid ID
  Given path '/v2/pet'
  And request {id: '#(invalidPetId)', name: '#(petName)', photoUrls: '#(photoUrls)', tags: '#(tags)', status: '#(status)'}
  When method put
  Then status 400

Examples:
  | invalidPetId | petName | photoUrls                       | tags                | status |
  | 'abc'        | 'Tommy' | ['url1', 'url2']                | ['tag1', 'tag2']   | 'sold' |
  | ''           | 'Max'   | ['url3', 'url4']                | ['tag3', 'tag4']   | 'sold' |
  | null         | 'Bella' | ['url5', 'url6']                | ['tag5', 'tag6']   | 'sold' |

Scenario: Attempt to update a pet that does not exist
  Given path '/v2/pet'
  And request {id: '#(nonExistentPetId)', name: '#(petName)', photoUrls: '#(photoUrls)', tags: '#(tags)', status: '#(status)'}
  When method put
  Then status 404

Examples:
  | nonExistentPetId | petName | photoUrls                       | tags                | status |
  | 9999             | 'Tommy' | ['url1', 'url2']                | ['tag1', 'tag2']   | 'sold' |
  | 8888             | 'Max'   | ['url3', 'url4']                | ['tag3', 'tag4']   | 'sold' |
  | 7777             | 'Bella' | ['url5', 'url6']                | ['tag5', 'tag6']   | 'sold' |
